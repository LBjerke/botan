# This is the CI for the main branch
name: Main CI

# Trigger the workflow on push or pull request, but only for the main branch
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:

  # NOTE: The generate-matrix saves the matrix as JSON successfully.
  # However, reading back out has apparently recently been broken, and
  #   strategy:
  #     matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
  # no longer works. Instead, we get an error:
  #   Error when evaluating 'strategy' for job 'say-hello'. .github/workflows/main-ci.yml (Line: 46, Col: 15): Unexpected value '{"os":"ubuntu-latest","ghc":"9.6.3"}'
  # Which indicates that we definitely have the right values, but something
  # is getting crossed wires due to both the bash and workflow yaml having splices.

  generate-matrix:
    name: Generate matrix
    strategy:
      matrix:
        # TODO: windows-latest
        os: [ ubuntu-latest, macos-latest ]
        ghc: [ "9.0.2", "9.2.8", "9.4.7", "9.6.3", "9.8.1" ]
        # target: [ "botan-bindings", "botan-low", "botan" ]
        exclude:
          # NOTE: Fails on 9.0.2 macos m1 arm
          - os: macos-latest
            ghc: "9.0.2"
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: echo-matrix
        name: Echo matrix
        run: |
          MATRIX='${{ toJSON(matrix) }}'
          echo "matrix='$MATRIX'"
          COMPRESSED_MATRIX=$(echo "$MATRIX" | jq -c .)
          echo "compressed_matrix='$COMPRESSED_MATRIX'"
      - id: set-matrix
        name: Set Matrix
        run: |
          MATRIX='${{ toJSON(matrix) }}'
          COMPRESSED_MATRIX=$(echo "$MATRIX" | jq -c .)
          echo "matrix='$COMPRESSED_MATRIX'" >> $GITHUB_OUTPUT

  say-hello:
    name: Say Hello on OS ${{ matrix.os }} / GHC ${{ matrix.ghc }}
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Echo hello
        run: |
          echo "Hello OS ${{ matrix.os }} / GHC ${{ matrix.ghc }}"

  # TODO: Install system dependencies (eg, brew)
  # install-dependencies:
  #   name: Install system dependencies
  #   needs: generate-matrix

  # TODO: install haskell

  # TODO: Install botan per-OS
  # install-botan:
  #   name: Install Botan on ${{ matrix.os }}
  #   needs: generate-matrix
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - id: install-botan-apt-get
  #       name: Install Botan on ${{ matrix.os }} using apt-get
  #       if: ${{ matrix.os == 'ubuntu-latest' }}
  #       run: |
  #         apt-get update
  #         apt-get -y install botan
  #     - id: install-botan-brew
  #       name: Install Botan on ${{ matrix.os }} using homebrew
  #       if: ${{ matrix.os == 'macos-latest' }}
  #       run: |
  #         brew update
  #         brew install botan